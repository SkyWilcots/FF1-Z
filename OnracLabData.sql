-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN TRANSACTION;
DROP SCHEMA OnracLabData CASCADE;
CREATE SCHEMA OnracLabData;
GRANT ALL ON SCHEMA OnracLabData TO postgres;
GRANT ALL ON SCHEMA OnracLabData TO public;

CREATE SEQUENCE seq_creature_id
INCREMENT BY 1
START WITH 0
NO MAXVALUE;

CREATE TABLE creature (creature_id int NOT NULL DEFAULT nextval('seq_creature_id'),
					   LV int NOT NULL DEFAULT 1, 
					   STRValue int NOT NULL DEFAULT 10, 
					   DEXValue int NOT NULL DEFAULT 10, 
					   CONValue int NOT NULL DEFAULT 10, 
					   INTValue int NOT NULL DEFAULT 10, 
					   WISValue int NOT NULL DEFAULT 10,
					   CHAValue int NOT NULL DEFAULT 10,
																
						CONSTRAINT pk_creature PRIMARY KEY (creature_id)
);

CREATE SEQUENCE seq_dimension_id
INCREMENT BY 1
START WITH 0
NO MAXVALUE;
					   
CREATE TABLE dimension (dimension_id int NOT NULL DEFAULT nextval ('seq_dimension_id'),
					   dimension_name varchar(100) NOT NULL UNIQUE,
					   dimension_code varchar(3) NOT NULL UNIQUE,
					   description varchar(2000) DEFAULT 'Data Unavailable',
					   
CONSTRAINT pk_dimension PRIMARY KEY (dimension_id)					   
);

CREATE TABLE resides_In (creature_id int NOT NULL,
						 dimension_id int NOT NULL,
						
CONSTRAINT pk_resident PRIMARY KEY (creature_id, dimension_id),
CONSTRAINT fk_resident_id FOREIGN KEY (creature_id) REFERENCES creature(creature_id),
CONSTRAINT fk_residence_id FOREIGN KEY (dimension_id) REFERENCES dimension(dimension_id)
);

CREATE SEQUENCE seq_location_id
INCREMENT BY 1
START WITH 0
NO MAXVALUE;

CREATE TABLE location (location_id int NOT NULL DEFAULT nextval ('seq_location_id'),
					   dimension_id int NOT NULL,
					   location_name varchar(100) NOT NULL,
					   description varchar(2000) DEFAULT 'Data Unavailable',

CONSTRAINT pk_location PRIMARY KEY (location_id, dimension_id),
CONSTRAINT fk_world_id FOREIGN KEY (dimension_id) REFERENCES dimension(dimension_id)					   
);

CREATE TABLE local_creature (creature_id int NOT NULL DEFAULT nextval ('seq_creature_id'),
							 name varchar(100) NOT NULL,
							 home_dimension_id int NOT NULL DEFAULT 1,
							 home_locale_id int DEFAULT 1,
							 description varchar(2000) DEFAULT 'Unknown',
							 
CONSTRAINT pk_local_creature_id PRIMARY KEY (creature_id),
CONSTRAINT fk_local_creature_id FOREIGN KEY (creature_id)       REFERENCES creature(creature_id),
CONSTRAINT fk_home_dimension_id FOREIGN KEY (home_dimension_id) REFERENCES dimension(dimension_id),
CONSTRAINT fk_home_city_id      FOREIGN KEY (home_locale_id)    REFERENCES location(location_id)
);

CREATE SEQUENCE seq_stranger_id
INCREMENT BY 1
START WITH 0
NO MAXVALUE;

CREATE TABLE stranger_creature (creature_id int NOT NULL DEFAULT nextval ('seq_creature_id'),
								stranger_id int NOT NULL DEFAULT nextval ('seq_stranger_id'),
							 name varchar(100) NOT NULL,
							 home_dimension_id int NOT NULL DEFAULT 0,
							 home_locale_id int DEFAULT 0,
							 description varchar(2000) DEFAULT 'Data Unavailable',
								
CONSTRAINT pk_stranger_creature_id PRIMARY KEY (creature_id, stranger_id),
CONSTRAINT fk_stranger_creature_id FOREIGN KEY (creature_id) REFERENCES creature(creature_id),
CONSTRAINT fk_stranger_home_dimension_id FOREIGN KEY (home_dimension_id) REFERENCES dimension(dimension_id),
CONSTRAINT fk_stranger_home_locale_id    FOREIGN KEY (home_locale_id)    REFERENCES location(location_id)
							   );

CREATE TABLE stranger_artifact (stranger_id int NOT NULL DEFAULT nextval ('seq_stranger_id'),
							 name varchar(100) NOT NULL,
							 home_dimension_id int NOT NULL DEFAULT 0,
							 home_locale_id int DEFAULT 0,
							 description varchar(2000) DEFAULT 'Data Unavailable',
							 features varchar(2000) DEFAULT 'Unidentified',
							
CONSTRAINT pk_stranger_artifact_id PRIMARY KEY (stranger_id),
CONSTRAINT fk_artifact_home_dimension_id FOREIGN KEY (home_dimension_id) REFERENCES dimension(dimension_id),
CONSTRAINT fk_artifact_home_locale_id    FOREIGN KEY (home_locale_id)    REFERENCES location(location_id)
							   );


END TRANSACTION;